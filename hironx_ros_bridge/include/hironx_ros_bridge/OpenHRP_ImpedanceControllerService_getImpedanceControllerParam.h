// Generated by gencpp from file hironx_ros_bridge/OpenHRP_ImpedanceControllerService_getImpedanceControllerParam.msg
// DO NOT EDIT!


#ifndef HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_GETIMPEDANCECONTROLLERPARAM_H
#define HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_GETIMPEDANCECONTROLLERPARAM_H

#include <ros/service_traits.h>


#include <hironx_ros_bridge/OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest.h>
#include <hironx_ros_bridge/OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse.h>


namespace hironx_ros_bridge
{

struct OpenHRP_ImpedanceControllerService_getImpedanceControllerParam
{

typedef OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest Request;
typedef OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct OpenHRP_ImpedanceControllerService_getImpedanceControllerParam
} // namespace hironx_ros_bridge


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam > {
  static const char* value()
  {
    return "c069390c14559c1e5ab416c93cea8a3b";
  }

  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam&) { return value(); }
};

template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam > {
  static const char* value()
  {
    return "hironx_ros_bridge/OpenHRP_ImpedanceControllerService_getImpedanceControllerParam";
  }

  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam&) { return value(); }
};


// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest> should match 
// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam > 
template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest> should match 
// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam > 
template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest>
{
  static const char* value()
  {
    return DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse> should match 
// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam > 
template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse> should match 
// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam > 
template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse>
{
  static const char* value()
  {
    return DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_getImpedanceControllerParamResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_GETIMPEDANCECONTROLLERPARAM_H
