// Generated by gencpp from file hironx_ros_bridge/OpenHRP_ImpedanceControllerService_deleteImpedanceController.msg
// DO NOT EDIT!


#ifndef HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_DELETEIMPEDANCECONTROLLER_H
#define HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_DELETEIMPEDANCECONTROLLER_H

#include <ros/service_traits.h>


#include <hironx_ros_bridge/OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest.h>
#include <hironx_ros_bridge/OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse.h>


namespace hironx_ros_bridge
{

struct OpenHRP_ImpedanceControllerService_deleteImpedanceController
{

typedef OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest Request;
typedef OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct OpenHRP_ImpedanceControllerService_deleteImpedanceController
} // namespace hironx_ros_bridge


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController > {
  static const char* value()
  {
    return "1906743241be63b67d1f045d0cabf4cc";
  }

  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController&) { return value(); }
};

template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController > {
  static const char* value()
  {
    return "hironx_ros_bridge/OpenHRP_ImpedanceControllerService_deleteImpedanceController";
  }

  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController&) { return value(); }
};


// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest> should match 
// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController > 
template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest> should match 
// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController > 
template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest>
{
  static const char* value()
  {
    return DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse> should match 
// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController > 
template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse> should match 
// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController > 
template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse>
{
  static const char* value()
  {
    return DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceController >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_deleteImpedanceControllerResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_DELETEIMPEDANCECONTROLLER_H
