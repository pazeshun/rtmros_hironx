// Generated by gencpp from file hironx_ros_bridge/OpenHRP_ImpedanceControllerService_setImpedanceControllerParam.msg
// DO NOT EDIT!


#ifndef HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_SETIMPEDANCECONTROLLERPARAM_H
#define HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_SETIMPEDANCECONTROLLERPARAM_H

#include <ros/service_traits.h>


#include <hironx_ros_bridge/OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest.h>
#include <hironx_ros_bridge/OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse.h>


namespace hironx_ros_bridge
{

struct OpenHRP_ImpedanceControllerService_setImpedanceControllerParam
{

typedef OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest Request;
typedef OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct OpenHRP_ImpedanceControllerService_setImpedanceControllerParam
} // namespace hironx_ros_bridge


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam > {
  static const char* value()
  {
    return "05ae48dc77100b4b26e6e1932c845600";
  }

  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam&) { return value(); }
};

template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam > {
  static const char* value()
  {
    return "hironx_ros_bridge/OpenHRP_ImpedanceControllerService_setImpedanceControllerParam";
  }

  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam&) { return value(); }
};


// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest> should match 
// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam > 
template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest> should match 
// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam > 
template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest>
{
  static const char* value()
  {
    return DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse> should match 
// service_traits::MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam > 
template<>
struct MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse> should match 
// service_traits::DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam > 
template<>
struct DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse>
{
  static const char* value()
  {
    return DataType< ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParam >::value();
  }
  static const char* value(const ::hironx_ros_bridge::OpenHRP_ImpedanceControllerService_setImpedanceControllerParamResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HIRONX_ROS_BRIDGE_MESSAGE_OPENHRP_IMPEDANCECONTROLLERSERVICE_SETIMPEDANCECONTROLLERPARAM_H
